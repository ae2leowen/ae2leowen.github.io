<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++总结</title>
      <link href="/2024/09/27/C++%E6%80%BB%E7%BB%93/"/>
      <url>/2024/09/27/C++%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1. 基础知识"></a>1. 基础知识</h2><h3 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h3><blockquote><p>C面向过程，C++面向对象&#x2F;面向过程</p></blockquote><ul><li><h4 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h4><blockquote><p>核心是数据和操作数据</p></blockquote></li><li><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><blockquote><p>封装、继承、多态</p></blockquote><ul><li><h5 id="封装：分离定义和实现；隐藏实现细节-代码保护，避免使用者数据破坏类内部数据"><a href="#封装：分离定义和实现；隐藏实现细节-代码保护，避免使用者数据破坏类内部数据" class="headerlink" title="封装：分离定义和实现；隐藏实现细节; 代码保护，避免使用者数据破坏类内部数据"></a>封装：分离定义和实现；隐藏实现细节; 代码保护，避免使用者数据破坏类内部数据</h5><ul><li><h6 id="友元：可以访问类的私有成员，但不属于类"><a href="#友元：可以访问类的私有成员，但不属于类" class="headerlink" title="友元：可以访问类的私有成员，但不属于类"></a>友元：可以访问类的私有成员，但不属于类</h6><ul><li>会破坏封装性，友元的声明需要在类内部(在内部任意位置都可以)，</li><li>友元函数无传递性</li><li><strong>友元声明不是函数声明</strong>(即需要类外单独声明函数，即使在声明时定义了该友元函数，当前类调用友元函数也必须在友元函数的声明之后)  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">struct ABC &#123;    friend void abc()&#123;&#x2F;* abc的定义*&#x2F;&#125;&#x2F;&#x2F;友元声明    void print() &#123; abc(); &#125; &#x2F;&#x2F;错误，此时abc还未声明    void print(int a);&#125;;void ABC::print(int a) &#123;    abc(); &#x2F;&#x2F;错误，此时abc还未声明&#125;void abc(); &#x2F;&#x2F;友元函数的声明void ABC::print(int a) &#123;    abc(); &#x2F;&#x2F;正确，此时abc已经声明&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>可以是函数、类、类的成员函数<blockquote><p>A::a()是B的友元，那需要按照先定义类A，声明a(不能定义)，定义B并声明a是友元，最后定义a</p></blockquote></li></ul></li></ul></li><li><h5 id="继承-表达is-a关系"><a href="#继承-表达is-a关系" class="headerlink" title="继承: 表达is-a关系"></a>继承: 表达<code>is-a</code>关系</h5><ul><li>好处：代码重用，提高代码的可维护性；对类扩展</li><li>友元关系不能被继承，其具有单向性、无传递性</li><li>静态成员不能被继承，但子类可以直接使用父类的静态成员函数，但无法重写</li><li>多重继承中，最晚子类的内存模型跟继承顺序相关</li><li>菱形继承：子类通过不同路径继承了同一基类，导致二义性，可通过虚继承处理</li><li>虚继承：子类通过虚基类继承基类，子类可以重写基类虚函数，但不能继承基类非虚函数</li><li>继承类型有public、private、protected，public继承可以访问基类的所有成员，private继承只能访问基类的公有成员，protected继承只能访问基类的公有和保护成员</li><li>缺点是多继承的复杂性，容易造成类爆炸，且父类的变动会影响所有子孙类</li></ul></li><li><h5 id="多态：同一对象在不同条件下表现出不同的特性"><a href="#多态：同一对象在不同条件下表现出不同的特性" class="headerlink" title="多态：同一对象在不同条件下表现出不同的特性"></a>多态：同一对象在不同条件下表现出不同的特性</h5><ul><li><h6 id="静态多态："><a href="#静态多态：" class="headerlink" title="静态多态："></a>静态多态：</h6><ul><li>通过函数重载实现，根据参数类型调用不同的函数</li><li>通过模板实现，模板分为类模板和函数模板</li></ul></li><li><h6 id="动态多态：通过虚函数实现，根据对象类型调用不同的函数"><a href="#动态多态：通过虚函数实现，根据对象类型调用不同的函数" class="headerlink" title="动态多态：通过虚函数实现，根据对象类型调用不同的函数"></a>动态多态：通过虚函数实现，根据对象类型调用不同的函数</h6><ul><li>子类继承父类虚函数表并进行虚函数的替换(覆盖)</li><li>需要使用基类的指针&#x2F;引用进行调用</li><li>虚函数：即声明时加入virtual标识的函数</li><li>纯虚函数：即声明时没有函数体的虚函数，需要子类实现该函数，含有虚函数的类无法实例化</li><li>虚析构函数：析构函数默认是虚函数，可以被子类继承并实现自己的析构函数，如果一个类有至少一个虚函数就应当有虚析构函数(否则会导致父类无法被析构)</li><li>对于父类的虚函数，子类可以选择性重写，但纯虚函数必须被子类实现，否则无法创建对象</li><li>友元函数不可以是虚函数，因为友元函数没有this指针，无法调用虚函数</li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> C++知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FP16和FP32互转</title>
      <link href="/2024/09/27/FP16%E5%92%8CFP32%E4%BA%92%E8%BD%AC/"/>
      <url>/2024/09/27/FP16%E5%92%8CFP32%E4%BA%92%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="FP16和FP32互转"><a href="#FP16和FP32互转" class="headerlink" title="FP16和FP32互转"></a>FP16和FP32互转</h2><ul><li>C++版本<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">unsigned</span> <span class="token keyword">short</span> <span class="token keyword">uint16_t</span><span class="token punctuation">;</span><span class="token comment">//占用2个字节</span><span class="token keyword">typedef</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token keyword">uint32_t</span><span class="token punctuation">;</span> <span class="token comment">//占用4个字节</span><span class="token keyword">uint32_t</span> <span class="token function">as_uint</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">float</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">float</span> <span class="token function">as_float</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">uint32_t</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">float</span> <span class="token function">half_to_float</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">uint16_t</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// IEEE-754 16-bit floating-point format (without infinity): 1-5-10, exp-15, +-131008.0, +-6.1035156E-5, +-5.9604645E-8, 3.311 digits</span><span class="token keyword">const</span> <span class="token keyword">uint32_t</span> e <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">&amp;</span><span class="token number">0x7C00</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// exponent</span><span class="token keyword">const</span> <span class="token keyword">uint32_t</span> m <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">&amp;</span><span class="token number">0x03FF</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">13</span><span class="token punctuation">;</span> <span class="token comment">// mantissa</span><span class="token keyword">const</span> <span class="token keyword">uint32_t</span> v <span class="token operator">=</span> <span class="token function">as_uint</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>m<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">23</span><span class="token punctuation">;</span> <span class="token comment">// evil log2 bit hack to count leading zeros in denormalized format</span><span class="token keyword">return</span> <span class="token function">as_float</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">&amp;</span><span class="token number">0x8000</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">16</span> <span class="token operator">|</span> <span class="token punctuation">(</span>e<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">+</span><span class="token number">112</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">23</span><span class="token operator">|</span>m<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>m<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token operator">-</span><span class="token number">37</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">23</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token operator">-</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0x007FE000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// sign : normalized : denormalized</span><span class="token punctuation">&#125;</span><span class="token keyword">uint16_t</span> <span class="token function">float_to_half</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">float</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// IEEE-754 16-bit floating-point format (without infinity): 1-5-10, exp-15, +-131008.0, +-6.1035156E-5, +-5.9604645E-8, 3.311 digits</span><span class="token keyword">const</span> <span class="token keyword">uint32_t</span> b <span class="token operator">=</span> <span class="token function">as_uint</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0x00001000</span><span class="token punctuation">;</span> <span class="token comment">// round-to-nearest-even: add last bit after truncated mantissa</span><span class="token keyword">const</span> <span class="token keyword">uint32_t</span> e <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token operator">&amp;</span><span class="token number">0x7F800000</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">23</span><span class="token punctuation">;</span> <span class="token comment">// exponent</span><span class="token keyword">const</span> <span class="token keyword">uint32_t</span> m <span class="token operator">=</span> b<span class="token operator">&amp;</span><span class="token number">0x007FFFFF</span><span class="token punctuation">;</span> <span class="token comment">// mantissa; in line below: 0x007FF000 = 0x00800000-0x00001000 = decimal indicator flag - initial rounding</span><span class="token keyword">return</span> <span class="token punctuation">(</span>b<span class="token operator">&amp;</span><span class="token number">0x80000000</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">16</span> <span class="token operator">|</span> <span class="token punctuation">(</span>e<span class="token operator">></span><span class="token number">112</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">-</span><span class="token number">112</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0x7C00</span><span class="token punctuation">)</span><span class="token operator">|</span>m<span class="token operator">>></span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">&lt;</span><span class="token number">113</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>e<span class="token operator">></span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0x007FF000</span><span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token operator">>></span><span class="token punctuation">(</span><span class="token number">125</span><span class="token operator">-</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>e<span class="token operator">></span><span class="token number">143</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0x7FFF</span><span class="token punctuation">;</span> <span class="token comment">// sign : normalized : denormalized : saturate</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!--stackedit_data:eyJoaXN0b3J5IjpbMTc1MTg4ODQ5OF19--></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FP16 </tag>
            
            <tag> FP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="/2024/09/27/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/09/27/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><blockquote><p>全局config设置</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"xxxx"</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email xxxx@example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>基础使用</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">拉取：git clone xxx.git <span class="token operator">&lt;</span>-b branch <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token operator"><span class="token file-descriptor important">1</span>></span>添加内容: <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> / <span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-u</span> 提交并comment: <span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"comment"</span>修改最近comment: <span class="token function">git</span> commit <span class="token parameter variable">--amend</span>合并commits: <span class="token function">git</span> rebase <span class="token parameter variable">-i</span> HEAD~n <span class="token punctuation">[</span>针对每次提交选择操作，可选操作如下<span class="token punctuation">]</span>- pick:保留commit- squash: 使用commit但合并到前一commit- reword: 使用commit并修改comment推送: <span class="token function">git</span> push origin <span class="token operator">&lt;</span>branch<span class="token operator">></span>推送指定分支: <span class="token function">git</span> push orign HEAD:refs/for/master新建分支: <span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>branch<span class="token operator">></span>删除本地分支: <span class="token function">git</span> branch <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>branch<span class="token operator">></span>删除远程分支: <span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> <span class="token operator">&lt;</span>branch<span class="token operator">></span>查看分支: <span class="token function">git</span> branch <span class="token operator">&lt;</span>-a / -r<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!--stackedit_data:eyJoaXN0b3J5IjpbLTc3NTQwNDgxNCw5MzAyMjM2ODNdfQ==-->]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git配置</title>
      <link href="/2024/09/27/Git%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/09/27/Git%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><h3 id="缩写配置"><a href="#缩写配置" class="headerlink" title="缩写配置"></a>缩写配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>filter <span class="token string">"lfs"</span><span class="token punctuation">]</span>smudge <span class="token operator">=</span> git-lfs smudge -- %frequired <span class="token operator">=</span> <span class="token boolean">true</span>clean <span class="token operator">=</span> git-lfs clean -- %f<span class="token punctuation">[</span>user<span class="token punctuation">]</span>name <span class="token operator">=</span> jkyangemail <span class="token operator">=</span> jkyang@example.com<span class="token punctuation">[</span>lfs<span class="token punctuation">]</span>url <span class="token operator">=</span> https://lfs.example.com/<span class="token punctuation">[</span>credential<span class="token punctuation">]</span>helper <span class="token operator">=</span> store<span class="token punctuation">[</span>credential <span class="token string">"ssh://gerrit.bj.example.com"</span><span class="token punctuation">]</span>username <span class="token operator">=</span> jkyang<span class="token punctuation">[</span>alias<span class="token punctuation">]</span>co <span class="token operator">=</span> checkoutst <span class="token operator">=</span> statuscm <span class="token operator">=</span> commit <span class="token parameter variable">-m</span>br <span class="token operator">=</span> branchbm <span class="token operator">=</span> branch <span class="token parameter variable">-m</span>bd <span class="token operator">=</span> branch <span class="token parameter variable">-D</span>cb <span class="token operator">=</span> checkout <span class="token parameter variable">-b</span><span class="token function">df</span> <span class="token operator">=</span> <span class="token function">diff</span><span class="token function">ls</span> <span class="token operator">=</span> log <span class="token parameter variable">--stat</span>lp <span class="token operator">=</span> log <span class="token parameter variable">-p</span>plo <span class="token operator">=</span> pull originplode <span class="token operator">=</span> pull origin developpho <span class="token operator">=</span> push originhist <span class="token operator">=</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>format:<span class="token string">'%C(bold yellow)[%h]%C(reset) %C(green)[%ad]%C(reset) %C(blue)[%cr]%C(reset) | %C(red)%s %C(bold red)&lt;%an>%C(reset) %C(blue)%d%C(reset)'</span> <span class="token parameter variable">--graph</span> <span class="token parameter variable">--date</span><span class="token operator">=</span>shortlg <span class="token operator">=</span> log <span class="token parameter variable">--color</span> <span class="token parameter variable">--graph</span> <span class="token parameter variable">--pretty</span><span class="token operator">=</span>format:<span class="token string">'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an>%Creset'</span> --abbrev-commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="补全配置"><a href="#补全配置" class="headerlink" title="补全配置"></a>补全配置</h3><blockquote><p>下载<a href="https://github.com/git/git/blob/master/contrib/completion/git-completion.bash">git-completion.bash</a>复制到~&#x2F;.git-completion.bash即可</p></blockquote><!--stackedit_data:eyJoaXN0b3J5IjpbMTE4NTYwNTY3NSwtMTk3ODQ3NTI1MSwzNzIwNTE5OTgsLTIwNjc4NDEwNjldfQ==-->]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV颜色</title>
      <link href="/2024/09/27/OpenCV%E9%A2%9C%E8%89%B2/"/>
      <url>/2024/09/27/OpenCV%E9%A2%9C%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="OpenCV颜色"><a href="#OpenCV颜色" class="headerlink" title="OpenCV颜色"></a>OpenCV颜色</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_RED</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span> </span><span class="token comment">//纯红</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_GREEN</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> </span><span class="token comment">//纯绿</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_BLUE</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> </span><span class="token comment">//纯蓝</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_DARKGRAY</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">169</span><span class="token punctuation">,</span><span class="token number">169</span><span class="token punctuation">,</span><span class="token number">169</span><span class="token punctuation">)</span> </span><span class="token comment">//深灰色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_DARKRED</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">139</span><span class="token punctuation">)</span> </span><span class="token comment">//深红色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_ORANGERED</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span> </span><span class="token comment">//橙红色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_CHOCOLATE</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">210</span><span class="token punctuation">)</span> </span><span class="token comment">//巧克力</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_GOLD</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">215</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span> </span><span class="token comment">//金色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_YELLOW</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span> </span><span class="token comment">//纯黄色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_OLIVE</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span> </span><span class="token comment">//橄榄色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_LIGHTGREEN</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">144</span><span class="token punctuation">,</span><span class="token number">238</span><span class="token punctuation">,</span><span class="token number">144</span><span class="token punctuation">)</span> </span><span class="token comment">//浅绿色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_DARKCYAN</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">139</span><span class="token punctuation">,</span><span class="token number">139</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> </span><span class="token comment">//深青色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_SKYBLUE</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token number">216</span><span class="token punctuation">,</span><span class="token number">173</span><span class="token punctuation">)</span> </span><span class="token comment">//天蓝色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_INDIGO</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">)</span> </span><span class="token comment">//藏青色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_PURPLE</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span> </span><span class="token comment">//紫色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_PINK</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">203</span><span class="token punctuation">,</span><span class="token number">192</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span> </span><span class="token comment">//粉色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_DEEPPINK</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span> </span><span class="token comment">//深粉色</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CV_COLOR_VIOLET</span> <span class="token expression">cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">238</span><span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">238</span><span class="token punctuation">)</span> </span><span class="token comment">//紫罗兰</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!--stackedit_data:eyJoaXN0b3J5IjpbLTEzMjMxMDU4ODEsLTkyNTkxOTcxN119-->]]></content>
      
      
      <categories>
          
          <category> OpenCV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opencv </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Terminator使用记录</title>
      <link href="/2024/09/27/Terminator%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/09/27/Terminator%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Terminator使用记录"><a href="#Terminator使用记录" class="headerlink" title="Terminator使用记录"></a>Terminator使用记录</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>sudo apt-get install terminator</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><blockquote><p>~&#x2F;.config&#x2F;terminator&#x2F;config</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>global_config<span class="token punctuation">]</span>handle_size <span class="token operator">=</span> <span class="token parameter variable">-3</span>title_transmit_fg_color <span class="token operator">=</span> <span class="token string">"#000000"</span>title_transmit_bg_color <span class="token operator">=</span> <span class="token string">"#3e3838"</span>inactive_color_offset <span class="token operator">=</span> <span class="token number">1.0</span>enabled_plugins <span class="token operator">=</span> CustomCommandsMenu, LaunchpadCodeURLHandler, APTURLHandler, LaunchpadBugURLHandlersuppress_multiple_term_dialog <span class="token operator">=</span> True<span class="token punctuation">[</span>keybindings<span class="token punctuation">]</span><span class="token punctuation">[</span>layouts<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span>default<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>child1<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>parent <span class="token operator">=</span> window0<span class="token builtin class-name">type</span> <span class="token operator">=</span> Terminal<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>window0<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>parent <span class="token operator">=</span> <span class="token string">""</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> Window<span class="token punctuation">[</span>plugins<span class="token punctuation">]</span><span class="token punctuation">[</span>profiles<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span>default<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span>jkyang<span class="token punctuation">]</span><span class="token punctuation">]</span>audible_bell <span class="token operator">=</span> Truebackground_color <span class="token operator">=</span> <span class="token string">"#002b36"</span>background_darkness <span class="token operator">=</span> <span class="token number">0.74</span>background_image <span class="token operator">=</span> Nonebackground_type <span class="token operator">=</span> transparentcursor_color <span class="token operator">=</span> <span class="token string">"#92f7ea"</span>custom_command <span class="token operator">=</span> <span class="token function">sudo</span> <span class="token parameter variable">-i</span>font <span class="token operator">=</span> Ubuntu Mono <span class="token number">13</span>foreground_color <span class="token operator">=</span> <span class="token string">"#9af792"</span>palette <span class="token operator">=</span> <span class="token string">"#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3"</span>scroll_background <span class="token operator">=</span> Falsescrollback_lines <span class="token operator">=</span> <span class="token number">3000</span>scrollbar_position <span class="token operator">=</span> hiddenurgent_bell <span class="token operator">=</span> Trueuse_custom_command <span class="token operator">=</span> Trueuse_system_font <span class="token operator">=</span> Falsevisible_bell <span class="token operator">=</span> True<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!--stackedit_data:eyJoaXN0b3J5IjpbMzE4ODk1NzM0LC0xMzIxMzM0MTI4XX0=-->]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terminal </tag>
            
            <tag> ssh </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu多版本管理</title>
      <link href="/2024/09/27/ubuntu%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
      <url>/2024/09/27/ubuntu%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Ubuntu多版本管理"><a href="#Ubuntu多版本管理" class="headerlink" title="Ubuntu多版本管理"></a>Ubuntu多版本管理</h2><h3 id="GCC、G-多版本"><a href="#GCC、G-多版本" class="headerlink" title="GCC、G++多版本"></a>GCC、G++多版本</h3><ol><li><p>以gcc为例，ls &#x2F;usr&#x2F;bin&#x2F;gcc*查看当前有哪些版本，若无需要版本apt-get install即可</p></li><li><p>对于不同版本设置不同等级，等级越高，优先级越高</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> update-alternatives <span class="token parameter variable">--install</span> /usr/bin/gcc gcc /usr/bin/gcc-4.9 <span class="token number">40</span><span class="token function">sudo</span> update-alternatives <span class="token parameter variable">--install</span> /usr/bin/gcc gcc /usr/bin/gcc-5 <span class="token number">50</span><span class="token function">sudo</span> update-alternatives <span class="token parameter variable">--install</span> /usr/bin/g++ g++ /usr/bin/g++-4.9 <span class="token number">40</span><span class="token function">sudo</span> update-alternatives <span class="token parameter variable">--install</span> /usr/bin/g++ g++ /usr/bin/g++-5 <span class="token number">50</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>版本切换</p><blockquote><ul><li>update-alternatives _–config xxx (其中xxx即为需要管理的工具)</li><li>输入编号即可切换到对应版本</li></ul></blockquote></li><li><p>删除可选项</p><blockquote><p>update-alternatives  –remove gcc &#x2F;usr&#x2F;bin&#x2F;gcc-4.9</p></blockquote></li><li><p>clang-format管理</p><blockquote><p>update-alternatives –install &#x2F;usr&#x2F;bin&#x2F;clang-format clang-format ~&#x2F;.vscode&#x2F;extensions&#x2F;ms-vscode.cpptools-1.2.2&#x2F;LLVM&#x2F;bin&#x2F;clang-format 100</p></blockquote><!--stackedit_data:eyJoaXN0b3J5IjpbLTg4NzUxNDI5N119--></li></ol>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alternatives </tag>
            
            <tag> gcc </tag>
            
            <tag> clang-format </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客发布脚本</title>
      <link href="/2024/09/27/%E4%B8%80%E9%94%AE%E5%8F%91%E5%B8%83%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/09/27/%E4%B8%80%E9%94%AE%E5%8F%91%E5%B8%83%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="博客发布脚本"><a href="#博客发布脚本" class="headerlink" title="博客发布脚本"></a>博客发布脚本</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">root</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span><span class="token assign-left variable">blog_prj</span><span class="token operator">=</span>stackedit-app-data<span class="token assign-left variable">webs_prj</span><span class="token operator">=</span>ae2leowen.github.io<span class="token assign-left variable">tplt_prj</span><span class="token operator">=</span>hexo<span class="token assign-left variable">tplt_theme</span><span class="token operator">=</span>matery<span class="token comment"># 1.备份博客源文件</span><span class="token builtin class-name">echo</span> <span class="token string">"开始备份源文件"</span><span class="token builtin class-name">cd</span> <span class="token variable">$blog_prj</span> <span class="token assign-left variable">date_tmp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y/%m/%d-%H:%M:%S<span class="token variable">)</span></span><span class="token function">git</span> stash <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> pull origin master <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> stash pop<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> cm <span class="token string">"update <span class="token variable">$date_tmp</span>"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push origin master<span class="token builtin class-name">cd</span> <span class="token variable">$root</span><span class="token comment"># 2.编译博客</span><span class="token builtin class-name">echo</span> <span class="token string">"开始编译博客"</span><span class="token function">cp</span> <span class="token parameter variable">-R</span> <span class="token variable">$blog_prj</span>/Blog/*.md <span class="token variable">$tplt_prj</span>/source/_posts/<span class="token function">cp</span> <span class="token parameter variable">-R</span> <span class="token variable">$blog_prj</span>/Blog/post_img/* <span class="token variable">$tplt_prj</span>/source/post_img/<span class="token builtin class-name">cd</span> <span class="token variable">$tplt_prj</span> <span class="token operator">&amp;&amp;</span> hexo clean <span class="token operator">&amp;&amp;</span> hexo g<span class="token builtin class-name">cd</span> themes/<span class="token variable">$tplt_theme</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> cm <span class="token string">"update <span class="token variable">$date_tmp</span>"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push origin main<span class="token builtin class-name">cd</span> <span class="token variable">$root</span>/<span class="token variable">$tplt_prj</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> cm <span class="token string">"update <span class="token variable">$date_tmp</span>"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push origin main<span class="token builtin class-name">cd</span> <span class="token variable">$root</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$webs_prj</span>/*<span class="token function">cp</span> <span class="token parameter variable">-R</span> <span class="token variable">$tplt_prj</span>/public/* <span class="token variable">$webs_prj</span>/<span class="token comment"># 3.部署博客</span><span class="token builtin class-name">echo</span> <span class="token string">"开始部署博客"</span><span class="token builtin class-name">cd</span> <span class="token variable">$webs_prj</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> cm <span class="token string">"update <span class="token variable">$date_tmp</span>"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push origin main<span class="token builtin class-name">cd</span> <span class="token variable">$root</span><span class="token builtin class-name">echo</span> <span class="token string">"发布完成，前往 https://ae2leowen.github.io 查看"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 博客发布 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客发布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像颜色空间</title>
      <link href="/2024/09/27/%E5%9B%BE%E5%83%8F%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4/"/>
      <url>/2024/09/27/%E5%9B%BE%E5%83%8F%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="OpenCV颜色"><a href="#OpenCV颜色" class="headerlink" title="OpenCV颜色"></a>OpenCV颜色</h2><h3 id="Gray8"><a href="#Gray8" class="headerlink" title="Gray8"></a>Gray8</h3><blockquote><p> Gray8: unsigned char* 存储, 每个像素用一个uchar表示,所以表示范围在[0,255], 一个长x款为HxW的灰度图, 占据HxWx1字节的大小</p></blockquote><h3 id="RGB888"><a href="#RGB888" class="headerlink" title="RGB888"></a>RGB888</h3><p><a href="https://cloud.tencent.com/developer/article/1612538">详解1</a> <a href="%5Bhttps://yangandmore.github.io/2019/03/27/%E5%9B%BE%E7%89%87RGB%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F/%5D(https://yangandmore.github.io/2019/03/27/%E5%9B%BE%E7%89%87RGB%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F/)">详解2</a></p><blockquote><p>unsigned char* 存储, 每个像素用三个uchar表示, 共占24的位也即3个字节, 内存中存储时为BGRBGRBGRBGR</p></blockquote><h3 id="YUV"><a href="#YUV" class="headerlink" title="YUV"></a>YUV</h3><blockquote><p>Yuv420p和yuv420sp只是存储的方式不一样，但所占内存是一样的，（其他对应yuv planner和yuv sp同理），yuv420p先存储所有y，再存储所有u，最后存储所有v，但yuv420sp先存储所有y，之后uv交替存储</p></blockquote><blockquote><p>占据内存计算示例：首先，不管哪种格式，每一个y或每一个u或每一个v都占一个字节，对于yuv420p，4个y共享一组uv（其中4是2x2,即横向2纵向2,如下图），所以对于某一个像素，占用一个y消耗一个字节，共享一组uv所以等价为消耗了1&#x2F;4的uv分量的内存，而一组uv占据了2个字节，因此单个像素占的字节是1+2&#x2F;4&#x3D;1.5，其他类似</p></blockquote><ul><li><p>yuv420p如下 :</p><blockquote><p>偶数行，偶数列获取U，奇数行，偶数列获取V<br>  <img src="/post_img/yuv420.png" alt="示意图"></p></blockquote></li><li><p>yuv420sp如下：</p><blockquote><p>偶数行，偶数列获取U，V<br>  <img src="/post_img/yuv420sp.png" alt="示意图"></p></blockquote></li></ul><!--stackedit_data:eyJoaXN0b3J5IjpbLTE2Mjg1MTM5MTVdfQ==-->]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RGB </tag>
            
            <tag> YUV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人网站</title>
      <link href="/2024/09/27/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2024/09/27/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1 id="记录基于github搭建网站"><a href="#记录基于github搭建网站" class="headerlink" title="记录基于github搭建网站"></a>记录基于github搭建网站</h1><p>简单记录基于github搭建个人博客站，万一后面忘了呢！！！</p><h2 id="创建"><a href="#创建" class="headerlink" title="创建&lt;博客仓库&gt;"></a>创建&lt;博客仓库&gt;</h2><ul><li><p>新建github仓库：</p><blockquote><p>仓库名为<username>.github.io，例如github的username是zhangsan，则仓库名为zhangsan.github.io, 可以选择创建时直接初始化，或者clone到本地自己初始化，和平常仓库创建无差</p></blockquote></li><li><p>设置pages</p><blockquote><p>github页面找到刚创建的仓库，点击最右侧的settings，并在settings界面左侧列找到pages点击，选择一个分支(如果只是初始化过那就只有一个main分支)并点击save，网页就发布成功了</p></blockquote></li><li><p>下载代码</p><blockquote><p>正常下载刚刚创建的仓库代码到本地<br>git clone xxx.git</p></blockquote></li></ul><h2 id="创建-1"><a href="#创建-1" class="headerlink" title="创建&lt;框架仓库&gt;"></a>创建&lt;框架仓库&gt;</h2><ul><li>安装hexo<ul><li>安装Node.js -&gt; <a href="https://nodejs.org/en/">官网</a></li><li>安装hexo(也可以用其他的) -&gt; <code>npm install -g hexo</code></li><li>关于hexo<a href="https://hexo.io/zh-cn/">官网</a></li></ul></li><li>初始化仓库<ul><li>用你最喜欢的方式创建一个新仓库并下载到本地</li><li>初始化框架 -&gt; <code>hexo init</code>等待完成</li></ul></li></ul><h2 id="发布内容"><a href="#发布内容" class="headerlink" title="发布内容"></a>发布内容</h2><ul><li><p>写博客</p><blockquote><p>在<strong>框架仓库</strong>中初始化完成后，会下载多个文件夹，在source&#x2F;_posts中新增md文件，一个即为一篇文章</p></blockquote></li><li><p>生成源码 </p><blockquote><p><code>hexo generate</code> 完成后会生成<code>public</code>文件夹，里面的所有文件即为框架生成的网站源码</p></blockquote></li><li><p>发布网站</p><blockquote><ul><li>拷贝<code>public</code>中所有内容到 <strong>博客仓库</strong> 源码中</li><li>提交到 <strong>博客仓库</strong> 中对应分支(即设置pages中选择的分支)即可</li></ul></blockquote></li></ul><h2 id="美化网站"><a href="#美化网站" class="headerlink" title="美化网站"></a>美化网站</h2><blockquote><p>网站找个自己喜欢的hexo框架适用的任意模板</p></blockquote><h3 id="Matery"><a href="#Matery" class="headerlink" title="Matery"></a><a href="https://github.com/blinkfox/hexo-theme-matery">Matery</a></h3><ul><li>下载模板<blockquote><ul><li>进入<strong>框架仓库</strong>，找到themes文件夹 <code>cd themes</code></li><li>下载源码 <code>git clone git@github.com:blinkfox/hexo-theme-matery.git --depth=1</code></li><li>参照官网文件修改自己的内容即可</li></ul></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
